[plugin:redirector]
# identification and challenge
use = repoze.who.plugins.redirector:make_plugin
login_url = /authentication/login_form
came_from_param = returnurl

[plugin:auth_tkt]
# identification and authentication
use = repoze.who.plugins.auth_tkt:make_plugin
secret = s33kr1t
cookie_name = oatmeal
secure = False
include_ip = False

[plugin:basicauth]
# identification and challenge
use = repoze.who.plugins.basicauth:make_plugin
realm = 'sample'

[plugin:htpasswd]
# authentication
use = repoze.who.plugins.htpasswd:make_plugin
filename = %(here)s/passwd
check_fn = repoze.who.plugins.htpasswd:crypt_check

[plugin:sqlusers]
# authentication
use = ndg.oauth.server.lib.utils.repoze_who_utils:make_authenticator_plugin
# Use #(login)s, which is translated to %(login)s - this gets round lack of escaping in ConfigParser.
query = SELECT openid, md5passwd FROM tbusers where accountid = #(login)s
conn_factory = ndg.oauth.server.lib.utils.repoze_who_utils:make_psycopg_conn_factory
compare_fn = ndg.oauth.server.lib.utils.repoze_who_utils:md5_password_compare
connection_string = host=<databasehost> dbname=<databasename> user=<user> password=<password>
# The recommended configuration does not work, at least with repoze.who v2.0:
#use = repoze.who.plugins.sql:make_authenticator_plugin
#query = "SELECT userid, password FROM users where login = %(login)s;"
#conn_factory = repoze.who.plugins.sql:make_psycopg_conn_factory
#compare_fn = repoze.who.plugins.sql:default_password_compare

#[plugin:sqlproperties]
#name = properties
#use = repoze.who.plugins.sql:make_metadata_plugin
#query = "SELECT firstname, lastname FROM users where userid = %(__userid)s;"
#filter = my.package:filter_propmd
#conn_factory = repoze.who.plugins.sql:make_psycopg_conn_factory

[general]
#request_classifier = repoze.who.classifiers:default_request_classifier
request_classifier = ndg.oauth.server.wsgi.repoze_util:oauth2basicauth_request_classifier
challenge_decider = repoze.who.classifiers:default_challenge_decider
remote_user_key = REMOTE_USER

[identifiers]
# plugin_name;classifier_name:.. or just plugin_name (good for any)
plugins =
      auth_tkt
      basicauth;oauth2basicauth

[authenticators]
# plugin_name;classifier_name.. or just plugin_name (good for any)
plugins =
      auth_tkt
      htpasswd
#      sqlusers

[challengers]
# plugin_name;classifier_name:.. or just plugin_name (good for any)
plugins =
      redirector;browser
      basicauth;oauth2basicauth

#[mdproviders]
#plugins =
#      sqlproperties
